{"version":3,"sources":["../../src/providers/orm/orm.provider.ts","../../src/providers/sqlite/sqlite.provider.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/bluebird/bluebird.provider.ts","../../src/providers/honeywell/honeywell.provider.ts","../../src/domain/item-orm.domain.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n//import { createConnection } from 'ionic-orm-2';\n//import { getConnectionManager } from 'ionic-orm-2';\n\n@Injectable()\nexport class ORMProvider {\n  /*\n\n  private ORMDriverType: string = \"ionic-sqlite\";\n  private ORMDatabaseName: string = \"fc-orm.db\";\n\n  constructor(private platform: Platform) {\n    if (!platform.is(\"cordova\")) {\n      this.ORMDriverType = \"websql\";\n      console.info(\"[TRINITY ORM] Using websql driver\");\n    } else {\n      console.info(\"[TRINITY ORM] Using ionic-sqlite driver\");\n    }\n  }\n\n  async initDB(domains: any[]): Promise<any> {\n    let domainsArray = [];\n    for (let i = 0; i < domains.length; i++) {\n      if (domains[i].entity != null) {\n        domainsArray.push(domains[i].entity);\n      }\n    }\n\n    let options: any = {\n      name: \"default\",\n      driver: {\n        type: this.ORMDriverType,\n        database: this.ORMDatabaseName,\n        extra: {\n          version: 1,\n          description: \"database\",\n          size: 2 * 1024 * 1024\n        }\n      },\n      entities: domainsArray,\n      logging: {\n        logFailedQueryError: false,\n        logQueries: false,\n        logSchemaCreation: false,\n        logOnlyFailedQueries: false\n      },\n      autoSchemaSync: true\n    };\n\n    await createConnection(options)\n      .then(async connection => {\n        console.warn(\"Connection Database Success!\");\n      })\n      .catch(error => console.warn(\"Error: \", error));\n  }\n\n  async findAll(repository: any): Promise<any[]> {\n    const entityForAlias = new repository();\n\n    try {\n      const data = await this.getRepository(repository).find();\n      return data;\n    } catch (err) {\n      console.warn(\n        \"Ocorreu um erro em findAll para a entidade \" +\n          entityForAlias.constructor.name +\n          \": \" +\n          err.message\n      );\n    }\n  }\n\n  async insert(repository: any, entity: any): Promise<any> {\n    try {\n      const managedEntity = await this.getRepository(repository).persist(\n        entity\n      );\n      return managedEntity;\n    } catch (err) {\n      console.warn(\n        \"Ocorreu um erro em insert para a entidade \" +\n          entity.constructor.name +\n          \": \" +\n          err.message\n      );\n    }\n  }\n\n  getRepository(repository: any) {\n    return this.getEntityManager().getRepository(repository);\n  }\n\n  getEntityManager() {\n    try {\n      const connectionManager = getConnectionManager().get(\"default\");\n      if (connectionManager != null) {\n        return connectionManager;\n      }\n    } catch (err) {\n      console.warn(\"Error EntityManager: \" + err.message);\n    }\n  }\n  */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/orm/orm.provider.ts","import { Injectable } from '@angular/core';\nimport { SqlDatabase } from 'ionix-sqlite';\n\n@Injectable()\nexport class SQLiteProvider {\n  private dbPromise: Promise<SqlDatabase>;\n\n  constructor() {}\n\n  initDB() {\n    const itemTable = `\n      CREATE TABLE IF NOT EXISTS item (\n        nome VARCHAR(100)\n      )`;\n\n    this.dbPromise = SqlDatabase.open(\"fc.db\", [itemTable]);\n  }\n\n  delete(query): Promise<boolean> {\n    return this.dbPromise\n      .then(db => db.execute(query))\n      .then(resultSet => {\n        return true;\n      })\n      .catch(err => {\n        return false;\n      });\n  }\n\n  executeQuery(query): Promise<any> {\n    return this.dbPromise.then(db => db.execute(query)).then(resultSet => {\n      const items = [];\n      for (let i = 0; i < resultSet.rows.length; i++) {\n        const row = resultSet.rows.item(i);\n        items.push(row);\n      }\n      return items;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sqlite/sqlite.provider.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 110\n// module chunks = 11","var map = {\n\t\"../pages/home/home.module\": [\n\t\t274,\n\t\t10\n\t],\n\t\"../pages/image-header/image-header.module\": [\n\t\t275,\n\t\t3\n\t],\n\t\"../pages/input-event/input-event.module\": [\n\t\t276,\n\t\t9\n\t],\n\t\"../pages/list/list.module\": [\n\t\t277,\n\t\t2\n\t],\n\t\"../pages/native-storage/native-storage.module\": [\n\t\t278,\n\t\t4\n\t],\n\t\"../pages/orm-storage/orm-storage.module\": [\n\t\t279,\n\t\t8\n\t],\n\t\"../pages/produto-detalhe/produto-detalhe.module\": [\n\t\t280,\n\t\t0\n\t],\n\t\"../pages/produto-lista/produto-lista.module\": [\n\t\t273,\n\t\t1\n\t],\n\t\"../pages/reactive-form/reactive-form.module\": [\n\t\t281,\n\t\t6\n\t],\n\t\"../pages/sqlite-storage/sqlite-storage.module\": [\n\t\t282,\n\t\t7\n\t],\n\t\"../pages/template-form/template-form.module\": [\n\t\t283,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 155\n// module chunks = 11","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\ndeclare var window: any;\ndeclare var bluebirdBarcodeScanner: any;\n\n@Injectable()\nexport class BluebirdProvider {\n  constructor(private platform: Platform) {\n    if (this.platform.is(\"cordova\")) {\n      this.registerBluebirdBarcodeScanner();\n    }\n  }\n\n  registerBluebirdBarcodeScanner() {\n    if (window.bluebirdBarcodeScanner) {\n      console.log(\"[BLUEBIRD] initializing barcode scanner\");\n      if (bluebirdBarcodeScanner) {\n        bluebirdBarcodeScanner.register(this.loadBarcode, function(argument) {\n          console.log(\"[BLUEBIRD] failed to register barcode scanner\");\n        });\n      }\n    }\n  }\n\n  loadBarcode(barcode) {\n    console.log(\"[BLUEBIRD] barcode read : \" + barcode);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/bluebird/bluebird.provider.ts","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\ndeclare var Honeywell: any;\n\n@Injectable()\nexport class HoneywellProvider {\n  constructor(private platform: Platform) {\n    if (platform.is(\"cordova\")) {\n      this.onBarcodeEvent();\n      this.onFailureEvent();\n    }\n  }\n\n  /**\n   *\n   *\n   * @name onBarcodeEvent\n   * @function\n   * @param {function} success Callback for success\n   * @param {function} error Callback for error\n   * @param {Object} args Named arguments\n */\n  onBarcodeEvent() {\n    if (Honeywell != undefined) {\n      Honeywell.onBarcodeEvent(\n        function(data) {\n          console.log(\"[HONEYWELL] onBarcodeEvent\", data);\n        },\n        function(reason) {\n          console.log(\"[HONEYWELL] onBarcodeEvent\", reason);\n        }\n      );\n    }\n  }\n\n  /**\n   *\n   *\n   * @name onFailureEvent\n   * @function\n   * @param {function} success Callback for success\n   * @param {function} error Callback for error\n   * @param {Object} args Named arguments\n */\n\n  onFailureEvent() {\n    if (Honeywell != undefined) {\n      Honeywell.onFailureEvent(\n        function(failure) {\n          console.log(\"[HONEYWELL] onFailureEvent\", failure);\n        },\n        function(reason) {\n          console.log(\"[HONEYWELL] onFailureEvent\", reason);\n        }\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/honeywell/honeywell.provider.ts","//import { Column, PrimaryColumn, Table } from 'ionic-orm-2';\n\n//@Table()\nexport class ItemOrm {\n  //@PrimaryColumn(\"int\") id: number;\n  //@Column({ nullable: true })\n  //name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/domain/item-orm.domain.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { GoogleAnalytics } from '@ionic-native/google-analytics';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { BluebirdProvider } from '../providers/bluebird/bluebird.provider';\nimport { HoneywellProvider } from '../providers/honeywell/honeywell.provider';\nimport { ORMProvider } from '../providers/orm/orm.provider';\nimport { SQLiteProvider } from './../providers/sqlite/sqlite.provider';\nimport { MyApp } from './app.component';\n\n@NgModule({\n  declarations: [MyApp],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [MyApp],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    BarcodeScanner,\n    SQLiteProvider,\n    ORMProvider,\n    SQLite,\n    HoneywellProvider,\n    BluebirdProvider,\n    GoogleAnalytics\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { GoogleAnalytics } from '@ionic-native/google-analytics';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Nav, Platform } from 'ionic-angular';\n\nimport { ItemOrm } from './../domain/item-orm.domain';\nimport { BluebirdProvider } from './../providers/bluebird/bluebird.provider';\nimport { HoneywellProvider } from './../providers/honeywell/honeywell.provider';\nimport { ORMProvider } from './../providers/orm/orm.provider';\nimport { SQLiteProvider } from './../providers/sqlite/sqlite.provider';\n\n@Component({\n  templateUrl: \"app.html\"\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = \"ProdutoListaPage\";\n\n  pages: Array<{ title: string; component: any }>;\n\n  domains = [{ entity: ItemOrm, tableName: \"item_orm\" }];\n\n  constructor(\n    public platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    private sqLiteProvider: SQLiteProvider,\n    private ormProvider: ORMProvider,\n    private honeywellProvider: HoneywellProvider,\n    private bluebirdProvider: BluebirdProvider,\n    private ga: GoogleAnalytics\n  ) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: \"Lista de Produtos\", component: \"ProdutoListaPage\" },\n      { title: \"Input Event\", component: \"InputEventPage\" },\n      { title: \"Template Form\", component: \"TemplateFormPage\" },\n      { title: \"Reactive Form\", component: \"ReactiveFormPage\" },\n      { title: \"Native Storage\", component: \"NativeStoragePage\" },\n      { title: \"SQLite Storage\", component: \"SqliteStoragePage\" },\n      { title: \"ORM Storage\", component: \"OrmStoragePage\" },\n      { title: \"Image Header\", component: \"ImageHeaderPage\" }\n    ];\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n\n      if (!this.platform.is(\"browser\")) {\n        this.statusBar.styleDefault();\n        this.splashScreen.hide();\n\n        this.sqLiteProvider.initDB();\n        //this.ormProvider.initDB(this.domains);\n      }\n\n      this.startTrackGoogleAnalytics();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  startTrackGoogleAnalytics() {\n    this.ga\n      .startTrackerWithId(\"UA-107922563-1\")\n      .then(() => {\n        console.log(\"Google analytics is ready now\");\n        this.ga.trackView(\"test\");\n        this.ga.setAppVersion(\"0.0.1\");\n      })\n      .catch(e => console.log(\"Error starting GoogleAnalytics\", e));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}
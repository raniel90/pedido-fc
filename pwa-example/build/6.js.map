{"version":3,"sources":["../../src/pages/reactive-form/reactive-form.module.ts","../../src/pages/reactive-form/reactive-form.ts","../../src/validators/email.validator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACG;AAUnD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QARlC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZO;AACqC;AACtB;AAES;AAOlE;IAIE,0BACS,OAAsB,EACtB,SAAoB,EACpB,WAAwB;QAFxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QALjC,cAAS,GAAQ,EAAE,CAAC;QAOlB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,mFAAc,CAAC,QAAQ,CAAC,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,uDAA4B,GAA5B,UAA6B,KAAK,IAAG,CAAC;IAEtC,yCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAED,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IApCU,gBAAgB;QAJ5B,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;6EAM+B;YACX,mEAAS;YACP,WAAW;OAPtB,gBAAgB,CAqC5B;IAAD,CAAC;AAAA;SArCY,gBAAgB,gB;;;;;;;;ACT7B;AAAA;IAAA;IAaA,CAAC;IAXQ,uBAAQ,GAAf,UAAgB,OAAwB;QAEtC,IAAI,YAAY,GAAG,wJAAwJ,CAAC;QAE5K,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEH,qBAAC;AAAD,CAAC","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ReactiveFormPage } from './reactive-form';\n\n@NgModule({\n  declarations: [\n    ReactiveFormPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ReactiveFormPage),\n  ],\n})\nexport class ReactiveFormPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reactive-form/reactive-form.module.ts","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\nimport { EmailValidator } from '../../validators/email.validator';\n\n@IonicPage()\n@Component({\n  selector: \"page-reactive-form\",\n  templateUrl: \"reactive-form.html\"\n})\nexport class ReactiveFormPage {\n  clienteForm: FormGroup;\n  telefones: any = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public formBuilder: FormBuilder\n  ) {\n    this.clienteForm = formBuilder.group({\n      razaoSocial: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, EmailValidator.validate]],\n      telefones: this.formBuilder.array([this.criarFormTelefone()])\n    });\n  }\n\n  criarFormTelefone(): FormGroup {\n    return this.formBuilder.group({\n      ddd: [\"\", [Validators.required, Validators.maxLength(3)]],\n      numero: [\"\", [Validators.required]]\n    });\n  }\n\n  adicionarTelefone(): void {\n    this.telefones = this.clienteForm.get(\"telefones\") as FormArray;\n    this.telefones.push(this.criarFormTelefone());\n  }\n\n  exibirBotaoAdicionarTelefone(index) {}\n\n  ionViewDidLoad() {\n    console.log(\"ionViewDidLoad ReactiveFormPage\");\n  }\n\n  onSubmit() {\n    console.log(this.clienteForm.value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reactive-form/reactive-form.ts","import { AbstractControl } from '@angular/forms';\n\nexport class EmailValidator {\n\n  static validate(control: AbstractControl) {\n\n    let EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!EMAIL_REGEXP.test(control.value)) {\n      return { \"INVALID_EMAIL\": true };\n    }\n\n    return null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.validator.ts"],"sourceRoot":""}